#pragma once

#include <ntifs.h>

#define IO_GET_CLIENTADDRESS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x666, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IO_READ_REQUEST CTL_CODE(FILE_DEVICE_UNKNOWN, 0x667, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IO_WRITE_REQUEST CTL_CODE(FILE_DEVICE_UNKNOWN, 0x668, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IO_GET_PROCESSID CTL_CODE(FILE_DEVICE_UNKNOWN, 0x669, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IO_REQUEST_INFO CTL_CODE(FILE_DEVICE_UNKNOWN, 0x670, METHOD_BUFFERED, FILE_ANY_ACCESS)




NTSTATUS IoControl(PDEVICE_OBJECT DeviceObject, PIRP Irp);
NTSTATUS CreateCall(PDEVICE_OBJECT DeviceObject, PIRP Irp);
NTSTATUS CloseCall(PDEVICE_OBJECT DeviceObject, PIRP Irp);


typedef struct _KERNEL_READ_REQUEST
{
	ULONG ProcessId;
	ULONG64 Address;
	PVOID Buffer;
	ULONG Size;
} KERNEL_READ_REQUEST, * PKERNEL_READ_REQUEST;

typedef struct _KERNEL_WRITE_REQUEST
{
	ULONG ProcessId;
	ULONG64 Address;
	PVOID Buffer;
	ULONG Size;
} KERNEL_WRITE_REQUEST, * PKERNEL_WRITE_REQUEST;

typedef struct _KERNEL_INFO_REQUEST
{
	ULONG64 BaseAddress;
	ULONG ProcessID;
} KERNEL_INFO_REQUEST, * PKERNEL_INFO_REQUEST;